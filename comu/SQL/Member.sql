DROP TABLE MEMBER;

CREATE TABLE MEMBER(
ID_SEQ INT AUTO_INCREMENT PRIMARY KEY,
ID VARCHAR(100) NOT NULL UNIQUE,
PASSWORD VARCHAR(200) NOT NULL,
PHONE VARCHAR(16) NOT NULL,
NAME VARCHAR(40) NOT NULL,
BIRTH DATE NOT NULL,
ADDRESS VARCHAR(150) NOT NULL,
GENDER ENUM('M', 'F'),
FOREIGNER ENUM('K', 'F')
);

COMMIT;

#  FOREIGN KEY (main_table_id) REFERENCES main_table(id) ON DELETE CASCADE







INSERT INTO INBODY (USER_ID, IN_HEIGHT, IN_WEIGHT, IN_SCORE, IN_FAT, IN_MUSCLE, IN_C_DT)
VALUES
('test1123', 163.7, 73.4, 65, 20.7, 13.5, '2023-06-27 12:34:56'),
('test1123', 163.7, 73.4, 65, 20.7, 13.5, DATE_ADD('2023-06-27 12:34:56', INTERVAL 2 WEEK)),
('test1123', 163.7, 73.4, 65, 20.7, 13.5, DATE_ADD('2023-06-27 12:34:56', INTERVAL 4 WEEK)),
('test1123', 163.7, 73.4, 65, 20.7, 13.5, DATE_ADD('2023-06-27 12:34:56', INTERVAL 6 WEEK)),
('test1123', 163.7, 73.4, 65, 20.7, 13.5, DATE_ADD('2023-06-27 12:34:56', INTERVAL 8 WEEK)),
('test1123', 163.7, 73.4, 65, 20.7, 13.5, DATE_ADD('2023-06-27 12:34:56', INTERVAL 10 WEEK)),
-- 필요한 만큼 데이터를 추가하려면 위의 패턴을 계속해서 반복하십시오.


INSERT INTO INBODY (USER_ID, IN_HEIGHT, IN_WEIGHT, IN_SCORE, IN_FAT, IN_MUSCLE, IN_C_DT)
VALUES
('test1123', 163.7, 73.4, 65, 20.7, 13.5, '2023-06-27 12:34:56'),
('test1123', 163.7, 72.4, 66, 20.3, 13.8, DATE_ADD('2023-06-27 12:34:56', INTERVAL 2 WEEK)),
('test1123', 163.7, 71.4, 67, 19.9, 14.1, DATE_ADD('2023-06-27 12:34:56', INTERVAL 4 WEEK)),
('test1123', 163.7, 70.4, 68, 19.5, 14.4, DATE_ADD('2023-06-27 12:34:56', INTERVAL 6 WEEK)),
('test1123', 163.7, 69.4, 69, 19.1, 14.7, DATE_ADD('2023-06-27 12:34:56', INTERVAL 8 WEEK)),
('test1123', 163.7, 68.4, 70, 18.7, 15.0, DATE_ADD('2023-06-27 12:34:56', INTERVAL 10 WEEK)),
('test1123', 163.7, 67.4, 71, 18.3, 15.3, DATE_ADD('2023-06-27 12:34:56', INTERVAL 12 WEEK)),
('test1123', 163.7, 66.4, 72, 17.9, 15.6, DATE_ADD('2023-06-27 12:34:56', INTERVAL 14 WEEK)),
('test1123', 163.7, 65.4, 73, 17.5, 15.9, DATE_ADD('2023-06-27 12:34:56', INTERVAL 16 WEEK)),
('test1123', 163.7, 64.4, 74, 17.1, 16.2, DATE_ADD('2023-06-27 12:34:56', INTERVAL 18 WEEK)),
('test1123', 163.7, 63.4, 75, 16.7, 16.5, DATE_ADD('2023-06-27 12:34:56', INTERVAL 20 WEEK)),
('test1123', 163.7, 62.4, 76, 16.3, 16.8, DATE_ADD('2023-06-27 12:34:56', INTERVAL 22 WEEK)),
('test1123', 163.7, 61.4, 77, 15.9, 17.1, DATE_ADD('2023-06-27 12:34:56', INTERVAL 24 WEEK)),
('test1123', 163.7, 60.4, 78, 15.5, 17.4, DATE_ADD('2023-06-27 12:34:56', INTERVAL 26 WEEK)),
('test1123', 163.7, 59.4, 79, 15.1, 17.7, DATE_ADD('2023-06-27 12:34:56', INTERVAL 28 WEEK)),
('test1123', 163.7, 58.4, 80, 14.7, 18.0, DATE_ADD('2023-06-27 12:34:56', INTERVAL 30 WEEK)),
('test1123', 163.7, 57.4, 81, 14.3, 18.3, DATE_ADD('2023-06-27 12:34:56', INTERVAL 32 WEEK)),
('test1123', 163.7, 56.4, 82, 13.9, 18.6, DATE_ADD('2023-06-27 12:34:56', INTERVAL 34 WEEK)),
('test1123', 163.7, 55.4, 83, 13.5, 18.9, DATE_ADD('2023-06-27 12:34:56', INTERVAL 36 WEEK)),
('test1123', 163.7, 54.4, 84, 13.1, 19.2, DATE_ADD('2023-06-27 12:34:56', INTERVAL 38 WEEK));
